// SPDX-License-Identifier: GPL-2.0

/dts-v1/;

#include <dt-bindings/input/input.h>
#include "tegra114.dtsi"

/ {
	model = "Microsoft Surface 2";
	compatible = "microsoft,surface-2", "nvidia,tegra114";

	aliases {
		mmc0 = &sdmmc4; /* eMMC */
		mmc1 = &sdmmc3; /* uSD slot */
		mmc2 = &sdmmc1; /* WiFi */

		rtc0 = &palmas;
		rtc1 = "/rtc@7000e000";

		serial0 = &uarta; /* console */
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	clk32k_in: clock-32 {
		compatible = "fixed-clock";
		clock-frequency = <32768>;
		#clock-cells = <0>;
	};

	gpio-keys {
		compatible = "gpio-keys";

		label = "GPIO Buttons";

		power {
			label = "Power Button";
			gpios = <&gpio TEGRA_GPIO(V, 0) GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_POWER>;
			debounce-interval = <10>;
			wakeup-source;
		};

		windows-button {
			label = "Windows Button";
			gpios = <&gpio TEGRA_GPIO(I, 5) GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_LEFTMETA>;
			debounce-interval = <10>;
			wakeup-source;
		};

		volume-down {
			label = "Volume Down";
			gpios = <&gpio TEGRA_GPIO(R, 1) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEDOWN>;
			debounce-interval = <10>;
		};

		volume-up {
			label = "Volume Up";
			gpios = <&gpio TEGRA_GPIO(R, 2) GPIO_ACTIVE_LOW>;
			linux,code = <KEY_VOLUMEUP>;
			debounce-interval = <10>;
		};
	};

	gpio-hall-sensor {
		compatible = "gpio-keys";

		label = "GPIO Hall Effect Sensor";

		hall-sensor {
			label = "Hall Effect Sensor";
			gpios = <&gpio TEGRA_GPIO(R, 4) GPIO_ACTIVE_HIGH>;
			linux,input-type = <EV_SW>;
			linux,code = <SW_LID>;
			linux,can-disable;
			wakeup-source;
		};
	};

	backlight: backlight {
		compatible = "pwm-backlight";

		enable-gpios = <&gpio TEGRA_GPIO(CC, 2) GPIO_ACTIVE_HIGH>;
		power-supply = <&tps65090_fet1>;
		pwms = <&pwm 0 1000000>;

		brightness-levels = <1 255>;
		num-interpolated-steps = <254>;
		default-brightness-level = <128>;
	};

	sound {
		compatible = "nvidia,tegra-audio-wm8962";
		nvidia,model = "NVIDIA Tegra Surface 2";

		nvidia,audio-routing =
			"Headphone Jack", "HPOUTR",
			"Headphone Jack", "HPOUTL",
			"Int Spk", "SPKOUTR",
			"Int Spk", "SPKOUTL";

		nvidia,i2s-controller = <&tegra_i2s1>;
		nvidia,audio-codec = <&wm8962>;

		nvidia,hp-det-gpios = <&gpio TEGRA_GPIO(W, 2) GPIO_ACTIVE_LOW>;

		clocks = <&tegra_car TEGRA114_CLK_PLL_A>,
			 <&tegra_car TEGRA114_CLK_PLL_A_OUT0>,
			 <&tegra_pmc TEGRA_PMC_CLK_OUT_1>;
		clock-names = "pll_a", "pll_a_out0", "mclk";

		assigned-clocks = <&tegra_car TEGRA114_CLK_EXTERN1>,
				  <&tegra_pmc TEGRA_PMC_CLK_OUT_1>;

		assigned-clock-parents = <&tegra_car TEGRA114_CLK_PLL_A_OUT0>,
					 <&tegra_car TEGRA114_CLK_EXTERN1>;
	};

	host1x@50000000 {
		hdmi@54280000 {
			status = "disabled"; // doesn't work yet

			nvidia,ddc-i2c-bus = <&hdmi_ddc>;
			nvidia,hpd-gpio = <&gpio TEGRA_GPIO(N, 7) GPIO_ACTIVE_HIGH>;
		};

		dsi@54300000 {
			status = "okay";

			avdd-dsi-csi-supply = <&tps65913_ldo3>;

			panel@0 {
				compatible = "samsung,106hl02";
				reg = <0>;

				reset-gpios = <&gpio TEGRA_GPIO(N, 4) GPIO_ACTIVE_LOW>;

				power-supply = <&tps65090_fet4>;
				backlight = <&backlight>;
			};
		};
	};

	pmc@7000e400 {
		nvidia,invert-interrupt;
	};

	serial@70006000 {
		status = "okay";
	};

	pinmux@70000868 {
		pinctrl-names = "default";
		pinctrl-0 = <&state_default>;

		state_default: pinmux {
			/* UART A RX ??? */
			/*
			sdmmc3_cmd_pa7 {
				nvidia,pins = "sdmmc3_cmd_pa7";
				nvidia,function = "uarta";
				nvidia,pull = <TEGRA_PIN_PULL_DOWN>;
				nvidia,tristate = <TEGRA_PIN_ENABLE>;
				nvidia,enable-input = <TEGRA_PIN_ENABLE>;
			};
			*/

			/* UART A TX */
			sdmmc3_dat1_pb6 {
				nvidia,pins = "sdmmc3_dat1_pb6";
				nvidia,function = "uarta";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};

			panel-backlight {
				nvidia,pins = "gmi_ad8_ph0";
				nvidia,function = "pwm0";
				nvidia,pull = <TEGRA_PIN_PULL_NONE>;
				nvidia,tristate = <TEGRA_PIN_DISABLE>;
				nvidia,enable-input = <TEGRA_PIN_DISABLE>;
			};
		};
	};

	pwm@7000a000 {
		status = "okay";
	};

	i2c@7000c000 {
		status = "okay";
		clock-frequency = <400000>;

		sensor@28 {
			compatible = "hid-over-i2c";
			reg = <0x28>;
			hid-descr-addr = <0x0001>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(BB, 6) IRQ_TYPE_LEVEL_LOW>;
		};
	};

	i2c-cover {
		compatible = "i2c-hotplug-gpio";

		#address-cells = <1>;
		#size-cells = <0>;

		interrupts-extended = <&gpio TEGRA_GPIO(S, 0) IRQ_TYPE_EDGE_BOTH>;
		detect-gpios = <&gpio TEGRA_GPIO(S, 0) GPIO_ACTIVE_HIGH>;

		i2c-parent = <&i2c1>;

		cover@0 {
			compatible = "hid-over-i2c";
			reg = <0x00>;
			hid-descr-addr = <0x0041>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(C, 7) IRQ_TYPE_LEVEL_LOW>;
		};
	};

	i2c@7000c400 {
		status = "okay";
		clock-frequency = <400000>;

		touch-screen@4b {
			compatible = "hid-over-i2c";
			reg = <0x4b>;
			hid-descr-addr = <0x0000>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(O, 6) IRQ_TYPE_LEVEL_LOW>;
		};
	};

	i2c@7000c500 {
		status = "okay";
		clock-frequency = <400000>;

		wm8962: wm8962@1a {
			compatible = "wlf,wm8962";
			reg = <0x1a>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(X, 3) IRQ_TYPE_LEVEL_HIGH>;

			DCVDD-supply = <&stub_audio_reg>;
			DBVDD-supply = <&stub_audio_reg>;
			AVDD-supply = <&stub_audio_reg>;
			CPVDD-supply = <&stub_audio_reg>;
			MICVDD-supply = <&stub_audio_reg>;
			PLLVDD-supply = <&stub_audio_reg>;
			SPKVDD1-supply = <&stub_audio_reg>;
			SPKVDD2-supply = <&stub_audio_reg>;
		};

		temperature-sensor@4c {
			compatible = "onnn,nct1008";
			reg = <0x4c>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(V, 1) IRQ_TYPE_EDGE_FALLING>;
		};
	};

	hdmi_ddc: i2c@7000c700 {
		status = "okay";
		clock-frequency = <100000>;
	};

	i2c@7000d000 {
		status = "okay";
		clock-frequency = <400000>;

		// Battery Charger, SMPS, LDOs, FETs
		tps65090@48 {
			compatible = "ti,tps65090";
			reg = <0x48>;

			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(S, 2) IRQ_TYPE_LEVEL_HIGH>;

			charger: charger {
				compatible = "ti,tps65090-charger";
				//ti,enable-low-current-chrg;
			};

			regulators {
				tps65090_fet1: fet1 {};
				tps65090_fet4: fet4 {};
			};
		};

		palmas: pmic@58 {
			compatible = "ti,palmas";
			reg = <0x58>;
			interrupts = <GIC_SPI 86 IRQ_TYPE_LEVEL_HIGH>;

			#interrupt-cells = <2>;
			interrupt-controller;

			ti,system-power-controller;

			palmas_gpio: gpio {
				compatible = "ti,palmas-gpio";
				gpio-controller;
				#gpio-cells = <2>;
			};

			pmic {
				compatible = "ti,tps65913-pmic", "ti,palmas-pmic";
				regulators {
					tps65913_ldo3: ldo3 {};
				};
			};

			rtc {
				compatible = "ti,palmas-rtc";
				interrupt-parent = <&palmas>;
				interrupts = <8 0>;
			};

			pinmux {
				compatible = "ti,tps65913-pinctrl";
				ti,palmas-enable-dvfs1;
				pinctrl-names = "default";
				pinctrl-0 = <&palmas_default>;

				palmas_default: pinmux {
					// empty
				};
			};
		};
	};

	ahub@70080000 {
		tegra_i2s1: i2s@70080400 {
			status = "okay";
		};
	};

	/* WiFi - SDMMC-1 */
	mmc@78000000 {
		#address-cells = <1>;
		#size-cells = <0>;

		status = "okay";

		bus-width = <4>;
		cap-power-off-card;
		keep-power-in-suspend;
		max-frequency = <100000000>;

		assigned-clocks = <&tegra_car TEGRA114_CLK_SDMMC1>;
		assigned-clock-parents = <&tegra_car TEGRA114_CLK_PLL_C>;
		assigned-clock-rates = <100000000>;

		mmc-pwrseq = <&mrvl_wifi_pwrseq>;
		//vqmmc-supply = <&vqmmc_wifi_reg>;

		/* Marvell 88W8797 WiFi */
		wifi@1 {
			compatible = "marvell,sd8897";
			reg = <1>;
			interrupt-parent = <&gpio>;
			interrupts = <TEGRA_GPIO(U, 5) IRQ_TYPE_LEVEL_HIGH>;
		};
	};

	mrvl_wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";

		clocks = <&tegra_pmc TEGRA_PMC_CLK_BLINK>;
		clock-names = "ext_clock";

		post-power-on-delay-ms = <300>;
		power-off-delay-us = <300>;
	};

	/* SD - SDMMC-3 */
	mmc@78000400 {
		status = "disabled"; // uart is more important
		vqmmc-supply = <&stub_sd_reg>;
		bus-width = <4>;
		cd-gpios = <&gpio TEGRA_GPIO(V, 2) GPIO_ACTIVE_LOW>;
	};

	/* eMMC - SDMMC-4 */
	mmc@78000600 {
		status = "okay";
		bus-width = <8>;
		non-removable;
	};

	usb@7d000000 {
		status = "okay";
		dr_mode = "host";
	};

	usb-phy@7d000000 {
		status = "okay";
		/* TODO: vbus-supply */
		//vbus-supply = <&usb3_vbus_reg>;
	};

	stub_sd_reg: stub_sd {
		compatible = "regulator-fixed";
		regulator-name = "vddio_sdmmc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	stub_audio_reg: stub_audio {
		compatible = "regulator-fixed";
		regulator-name = "stub_audio";
	};

/*
	usb3_vbus_reg: regulator-usb3 {
		compatible = "regulator-fixed";
		regulator-name = "usb2_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
		gpio = <&gpio TEGRA_GPIO(K, 1) GPIO_ACTIVE_HIGH>;
		vin-supply = <&tps65090_dcdc1_reg>;
	};
*/
};
